{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,kBACrCE,YAAaH,SAASC,cAAc,iBACpCG,cAAeJ,SAASC,cAAc,oBAKxC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAbPT,EAAKC,OAAOgB,iBAAiB,UAiB7B,SAAwBC,GACtBA,EAAEC,iBAGF,IAFA,IAAIC,EAAaC,OAAOrB,EAAKI,aAAakB,OACtCC,EAAYH,EAAaC,OAAOrB,EAAKK,YAAYiB,OAC5CE,EAAI,EAAGA,GAAKH,OAAOrB,EAAKM,cAAcgB,OAAQE,GAAK,EAChD,IAANA,EACFjB,EAAciB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBX,EAAA6B,OAAOI,QAAQ,sBAAuCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,KAGhEF,EAAciB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBX,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9Dc,GAAwBF,OAAOrB,EAAKK,YAAYiB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayInputEl: document.querySelector('[name=\"delay\"]'),\n  stepInputEl: document.querySelector('[name=\"step\"]'),\n  amountInputEl: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormElSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormElSubmit(e) {\n  e.preventDefault();\n  let firstDelay = Number(refs.delayInputEl.value);\n  let nextDelay = firstDelay + Number(refs.stepInputEl.value);\n  for (let i = 1; i <= Number(refs.amountInputEl.value); i += 1) {\n    if (i === 1) {\n      createPromise(i, firstDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      createPromise(i, nextDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      nextDelay = nextDelay + Number(refs.stepInputEl.value);\n    }\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayInputEl","stepInputEl","amountInputEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","value","nextDelay","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2e2b1226.js.map"}